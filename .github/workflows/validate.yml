---
name: Validate local database

on:
    push:
        branches:
            - main
    pull_request:

jobs:
    lint:

        runs-on: ubuntu-latest
        steps:
            - name: Checkout repository
              uses: actions/checkout@v3
              with:
                  fetch-depth: 0
                  submodules: true

            - name: Set up Python 3.10
              uses: actions/setup-python@v4
              with:
                  python-version: '3.10'
                  cache: pip
                  cache-dependency-path: |
                      requirements*.txt

            - name: Install dependencies
              run: pip install -r requirements.txt

            - name: Lint repository
              run: pre-commit run --all-files

    validate:

        runs-on: ubuntu-latest
        steps:
            - name: Checkout repository
              uses: actions/checkout@v3
              with:
                  fetch-depth: 0
                  submodules: true

            - name: Set up Python 3.10
              uses: actions/setup-python@v4
              with:
                  python-version: '3.10'
                  cache: pip
                  cache-dependency-path: |
                      requirements*.txt

            - name: Install dependencies
              run: pip install -r requirements.txt

            - name: Run database ingestion tasks
              run: |
                  invoke validate-entries

    build:
        runs-on: ubuntu-latest
        steps:
            - name: Check Docker build
              uses: actions/checkout@v3
              with:
                  fetch-depth: 0
                  submodules: true
            - name: Build image
              run: |
                  docker build . -t marda-registry

            - name: Launch image
              run: |
                  docker run -d --env PORT=8080 -p 8080:8080 marda-registry
            - name: Hit registry endpoints
              run: |
                  sleep 5
                  curl http://localhost:8080/filetypes | jq
                  curl http://localhost:8080/extractors| jq
                  curl http://localhost:8080/redoc
